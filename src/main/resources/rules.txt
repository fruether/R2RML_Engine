@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema> .
@prefix sl: <http://softlang.com/> .
@prefix maven: <http://softlang.com/plugins/maven/> .
@prefix technologies: <http://softlang.com/Plugins/> .
@prefix technologiesSmall: <http://softlang.com/plugins/> .


[XSDCheck:
    (?a sl:elementOf sl:XML)
    (?b sl:elementOf sl:XSD)
    XSDCheck(?a,?b) ->
    (?a sl:conformsTo ?b)]

[DetectProjectDependencies:
    (?file sl:partOf ?build)
    (?file sl:conformsTo maven:maven-4.0.0.xsd)
    (?file  sl:references ?dependency) ->
    (?build sl:dependsOn ?dependency)]

[DetectLiquidBase:
    (?file sl:conformsTo maven:maven-4.0.0.xsd)
    liquidBaseDependencyCheck(?file) ->
    (?file sl:references technologies:liquidbase)]

[LanguageDetection:
    (?file sl:partOf ?build)
    (?file rdf:type sl:Artefact)
    Parse(?file, ?language)
    ->
    (?file sl:elementOf ?language)
]
[JavaClassIdentification:
    (?file sl:elementOf sl:Java)
    RetrieveClass(?file, ?classname)
    ->
    (?file sl:hasClass ?classname)
]

[DTDDetection:
    (?file sl:partOf ?build)
    (?file rdf:type sl:Artefact)
    FileEnding(?file, ".dtd")
    ->
    (?file sl:elementOf sl:DTD)
]
[DTDValidation:
    (?file1 sl:partOf ?build1)
    (?file1 sl:elementOf sl:XML)
    (?file2 sl:partOf ?build2)
    (?file2 sl:elementOf sl:DTD)
    DTDCheck(?file1, ?file2)
    ->
    (?file1 sl:conformsTo ?file2)
]

[HibernateDependency:
    (?file sl:conformsTo maven:maven-4.0.0.xsd)
    HibernateDependencyCheck(?file) ->
    (?file sl:references technologies:hibernate)
]
[HibernateRoles:
    (?file sl:partOf ?build1)
    (?file sl:elementOf sl:XML)
    (?file sl:conformsTo ?schema)
    (?schema sl:partOf sl:hibernate)
    HibernateRoleIdentification(?schema, ?role)
    ->
    (?file sl:hasRole ?role)
]
[HibernateReferences:
    (?file1 sl:hasRole technologies:Hibernate/HibernateConfiguration)
    (?file2 sl:hasRole technologies:Hibernate/HibernateMapping)
    CheckReference(?file1, ?file2)
    ->
    (?file1 sl:HibernateConfigurationRefersToHibernateMapping ?file2)
]

[HibernateMappingFast:
    (?file1 sl:hasRole technologies:Hibernate/HibernateMapping)
    HibernateMappingAnalysis(?file1, ?class)
    ->
    (?file1 sl:refersTo ?class)
]

[HibernateObjectDefinition:
    (?file1 sl:hasRole technologies:Hibernate/HibernateMapping)
    (?file2 sl:elementOf sl:Java)
    (?file2 sl:hasClass ?class)
    (?file1 sl:refersTo ?class)
    GetClassLiteral(?class, ?classLanguage)
    ->
    (?class sl:defines ?classLanguage)
    (?classLanguage rdf:type sl:Language)
    (?classLanguage sl:subsetOf sl:JVMObject)
]

[HibernateMappingFunctionDefinition:
    (?file sl:hasRole technologies:Hibernate/HibernateMapping)
    HibernateGetMappingType(?file, ?function)
    ->
    (?file sl:defines ?function)
    (?function rdf:type sl:Function)
    (?function sl:partOf sl:OR-Mapping)
]
[HibernateMappingConfFunctionDefinition:
    (?file sl:hasRole technologies:Hibernate/HibernateConfiguration)
    ->
    (?file sl:defines sl:OR-Mapping)
]
[ibernateMappingFunctionInputDefinition:
    (?mappingFile sl:elementOf sl:XML)
    (?mappingFile sl:defines ?function)
    (?function sl:partOf sl:OR-Mapping)
    (?mappingFile sl:refersTo ?className)
    (?className sl:defines ?language)
    ->
    (?language sl:input ?function)
]

[ImportDetection:
    (?file sl:elementOf sl:Java)
    (?file sl:hasClass ?class)
    (?package rdf:type sl:Package)
    CheckImport(?file, ?package)
    ->
    (?file sl:uses ?package)
]
[HibernateImportUsedDetection:
    (?file1 sl:elementOf sl:Java)
    (?package rdf:type sl:Package)
    (?package sl:partOf sl:hibernate)
    (?file1 sl:uses ?package)
    (?file2 sl:elementOf sl:Java)
    notEqual(?file1, ?file2)
    (?file2 sl:hasClass ?class2)
    CheckClassReference(?file1, ?class2)
    (?file1 sl:hasClass ?class1)
    ->
    (?class1 sl:uses ?class2)
]
[MethodCallDetection:
    (?file sl:elementOf sl:Java)
    (?file sl:hasClass ?class)
    (?package rdf:type sl:Package)
    (?file sl:uses ?package)
    (?method sl:partOf ?package)
    (?method rdf:type sl:Method)
    CheckCall(?file, ?method, ?class)
    ->
    (?class sl:calls ?method)
]
[MethodCallDetectionWithDependency:
    (?file sl:elementOf sl:Java)
    (?file sl:hasClass ?class)
    (?package rdf:type sl:Package)
    (?packageDep rdf:type sl:Package)
    (?package sl:uses ?packageDep)
    (?file sl:uses ?package)
    (?method sl:partOf ?packageDep)
    (?method rdf:type sl:Method)
    CheckCall(?file, ?method, ?class)
    ->
    (?class sl:calls ?method)
]

[HibernateMappingFunctionUsed:
    (?file rdf:type sl:Artefact)
    (?file sl:elementOf sl:Java)
    (?file sl:hasClass ?theClass)
    (?theClass sl:uses ?class)
    (?mappingFile sl:refersTo ?class)
    (?mappingFile sl:defines ?function)
    (?mappingFile sl:hasRole technologies:Hibernate/HibernateMapping)
    (?theClass sl:calls ?method)
    (?method sl:partOf technologiesSmall:hibernate/Package/org.hibernate.Session)
 ->
    (?theClass sl:indicatesUseOf ?function)
]

[RetrieveReferencesBetweenXML:
     (?file1 sl:partOf ?build1)
     (?file1 sl:elementOf sl:XML)
     (?file2 sl:partOf ?build1)
     (?file1 sl:elementOf sl:XML)
     CheckReference(?file1, ?file2)
     ->
     (?file1 sl:refersTo ?file2)
 ]

[GetDefinedTablesInSQL:
    (?file sl:elementOf sl:SQL)
    ->
    RetrieveTables(?file)
]

[HibernateMappingReferencedTables:
    (?file sl:hasRole technologies:Hibernate/HibernateMapping)
    HibernateMappingGetTable(?file, ?table)
    ->
    (?file sl:HibernateMappingRefersToRelationalTable ?table)
]

[HibernateMappingJavaCorrespondsToTable:
    (?file sl:hasRole technologies:Hibernate/HibernateMapping)
    (?file sl:HibernateMappingRefersToRelationalTable ?table)
    (?table rdf:type sl:Table)
    (?sqlFile sl:definesTable ?table)
    (?file sl:refersTo ?class)
    ->
    (?class sl:correspondsTo ?table)
]

[RelationalLanguage:
    (?table rdf:type sl:Table)
    GetTableLiteral(?table, ?relationalLanguage)
    ->
    (?table sl:defines ?relationalLanguage)
    (?relationalLanguage rdf:type sl:Language)
    (?relationalLanguage sl:partOf sl:RelationalDatabase)
]

[HibernateMappingOutput:
    (?file sl:hasRole technologies:Hibernate/HibernateMapping)
    (?file sl:defines ?function)
    (?file sl:HibernateMappingRefersToRelationalTable ?table)
    (?table sl:defines ?relationalLanguage)
    ->
    (?function sl:output ?relationalLanguage)
]
